name: main

on:
  workflow_call:
    inputs:
      ecr_repository_uri:
        required: true
        type: string
      github_environment:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      lambda_name:
        required: true
        type: string
    secrets:
      ECR_AWS_ACCESS_KEY_ID:
        required: true
      ECR_AWS_SECRET_ACCESS_KEY:
        required: true

env:
  SH8: $(echo ${GITHUB_SHA} | cut -c1-8)



jobs:
  build:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.github_environment }}
    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Login to ECR-STG
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.ecr_repository_uri }}
        username: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
    
    - name: Get short commit
      run: |
        echo "SH8=$(echo ${{ env.SH8 }})" >> $GITHUB_ENV
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ inputs.ecr_repository_uri }}:${{ env.SH8 }}
          ${{ inputs.ecr_repository_uri }}:latest
  sync:
    runs-on: ubuntu-latest
    env:
      STAGE: ${{ inputs.github_environment }}
    environment:
      name: ${{ inputs.github_environment }}
    needs: build
    steps:

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.aws_region }}

    - name: Get short commit
      run: |
        echo "SH8=$(echo ${{ env.SH8 }})" >> $GITHUB_ENV
    
    - name: Changed the lambda image
      run: |
        aws lambda update-function-code --function-name  ${{ inputs.lambda_name }} --image-uri ${{ inputs.ecr_repository_uri }}:${{ env.SH8 }}